{"ast":null,"code":"var _jsxFileName = \"/Users/mubashirahmad/Downloads/coronadata/src/components/CountryPicker.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { fetchCountries } from '../ducks/countries';\nimport { Input, Select } from 'antd';\nimport { getCountry } from '../ducks/country';\n\nfunction CountryPicker() {\n  const [country, setCountry] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCountries());\n  }, []);\n  const countries = useSelector(store => {\n    return store.countries.countries;\n  });\n  const data = useSelector(state => {\n    return state.country.indivisualCountries;\n  });\n  console.log(data);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"30%\"\n    },\n    placeholder: \"Select a country\",\n    onChange: value => {\n      dispatch(getCountry(value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, countries.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      value: item.name,\n      key: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    }, \" \", item.name, \" \");\n  }))), /*#__PURE__*/React.createElement(CountryData, {\n    country: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CountryPicker;","map":{"version":3,"sources":["/Users/mubashirahmad/Downloads/coronadata/src/components/CountryPicker.js"],"names":["React","useState","useEffect","useDispatch","useSelector","fetchCountries","Input","Select","getCountry","CountryPicker","country","setCountry","dispatch","countries","store","data","state","indivisualCountries","console","log","width","value","map","item","index","name"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AAEA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,cAAR,QAA6B,oBAA7B;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,MAA5B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAIA,SAASC,aAAT,GAAwB;AAEpB,QAAK,CAACC,OAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMW,QAAQ,GAAGT,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAEVU,IAAAA,QAAQ,CAACP,cAAc,EAAf,CAAR;AAEH,GAJQ,EAIP,EAJO,CAAT;AAMA,QAAMQ,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAS;AAEnC,WAAOA,KAAK,CAACD,SAAN,CAAgBA,SAAvB;AAEH,GAJ4B,CAA7B;AAMA,QAAME,IAAI,GAAGX,WAAW,CAAEY,KAAD,IAAS;AAE9B,WAAOA,KAAK,CAACN,OAAN,CAAcO,mBAArB;AAEH,GAJuB,CAAxB;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,sBACJ,uDACQ,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAC;AAAP,KAAf;AAA8B,IAAA,WAAW,EAAC,kBAA1C;AAA6D,IAAA,QAAQ,EAAGC,KAAD,IAAS;AAE5ET,MAAAA,QAAQ,CAACJ,UAAU,CAACa,KAAD,CAAX,CAAR;AAEH,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGR,SAAS,CAACS,GAAV,CAAc,CAACC,IAAD,EAAMC,KAAN,KAAc;AAE7B,wBAAO,oBAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,KAAK,EAAED,IAAI,CAACE,IAA3B;AAAiC,MAAA,GAAG,EAAEF,IAAI,CAACE,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmDF,IAAI,CAACE,IAAxD,MAAP;AAEC,GAJA,CALH,CADE,CADR,eAeM,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEf,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfN,CADI;AAsBH;;AAED,eAAeD,aAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\n\nimport {useDispatch} from 'react-redux';\nimport {useSelector} from 'react-redux';\nimport {fetchCountries} from '../ducks/countries';\nimport {Input, Select} from 'antd';\nimport {getCountry} from '../ducks/country';\n\n\n\nfunction CountryPicker(){\n\n    const[country,setCountry] = useState('');\n\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n\n        dispatch(fetchCountries());\n\n    },[])\n\n    const countries = useSelector((store)=>{\n\n        return store.countries.countries;\n\n    })\n\n    const data = useSelector((state)=>{\n\n        return state.country.indivisualCountries;\n\n    })\n\n    console.log(data)\n\n    return(\n<>\n        <Input.Group >\n      <Select style={{width:\"30%\"}} placeholder=\"Select a country\" onChange={(value)=>{\n\n          dispatch(getCountry(value))\n          \n      }}>\n        {countries.map((item,index)=>{\n\n        return <Select.Option value={item.name} key={item.name}> {item.name} </Select.Option>\n\n        })}\n      </Select>\n      </Input.Group>\n\n      <CountryData country={country}/>\n    \n</>\n\n\n    )\n}\n\nexport default CountryPicker;"]},"metadata":{},"sourceType":"module"}