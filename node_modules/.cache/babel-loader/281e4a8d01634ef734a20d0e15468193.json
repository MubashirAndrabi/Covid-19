{"ast":null,"code":"var _jsxFileName = \"/Users/mubashirahmad/Downloads/coronadata/src/components/CoronaChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { fetchDailyData } from '../ducks/dailyData';\nimport { Line, Bar } from 'react-chartjs-2';\n\nfunction CoronaChart() {\n  const [state, setState] = useState({});\n  const dispatch = useDispatch();\n  const dailyData = useSelector(store => {\n    return store.dailyData.dailyData;\n  });\n  console.log(dailyData);\n  const date = dailyData.map(item => {\n    return item.reportDate;\n  });\n  console.log(date);\n  useEffect(() => {\n    dispatch(fetchDailyData());\n  }, []);\n  const lineChart = dailyData ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: date,\n      dataSets: [{\n        data: dailyData.map(item => {\n          return item.confirmed;\n        }),\n        label: 'Infected',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'blue',\n        borderWidth: 2\n      }, {\n        data: dailyData.map(item => {\n          return item.deaths;\n        }),\n        label: 'Deaths',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'red',\n        borderWidth: 2\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }) : 'Loading';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \" hello \");\n}\n\nexport default CoronaChart;","map":{"version":3,"sources":["/Users/mubashirahmad/Downloads/coronadata/src/components/CoronaChart.js"],"names":["React","useState","useEffect","useDispatch","useSelector","fetchDailyData","Line","Bar","CoronaChart","state","setState","dispatch","dailyData","store","console","log","date","map","item","reportDate","lineChart","labels","dataSets","data","confirmed","label","fill","lineTension","backgroundColor","borderColor","borderWidth","deaths"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAAQC,cAAR,QAA6B,oBAA7B;AAEA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;;AAEA,SAASC,WAAT,GAAsB;AAElB,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B;AAED,QAAMS,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAS;AAEtC,WAAOA,KAAK,CAACD,SAAN,CAAgBA,SAAvB;AAEC,GAJ2B,CAA7B;AAMCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEA,QAAMI,IAAI,GAAGJ,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAQ;AAE/B,WAAOA,IAAI,CAACC,UAAZ;AAEH,GAJY,CAAb;AAMAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEAd,EAAAA,SAAS,CAAC,MAAI;AAEVS,IAAAA,QAAQ,CAACN,cAAc,EAAf,CAAR;AAGH,GALQ,EAKP,EALO,CAAT;AAOA,QAAMe,SAAS,GAAKR,SAAS,gBACxB,oBAAC,IAAD;AAED,IAAA,IAAI,EAAI;AACJS,MAAAA,MAAM,EAAEL,IADJ;AAEJM,MAAAA,QAAQ,EAAC,CAAC;AACNC,QAAAA,IAAI,EAACX,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAQ;AACvB,iBAAOA,IAAI,CAACM,SAAZ;AACH,SAFI,CADC;AAINC,QAAAA,KAAK,EAAE,UAJD;AAKNC,QAAAA,IAAI,EAAE,KALA;AAMhBC,QAAAA,WAAW,EAAE,GANG;AAOhBC,QAAAA,eAAe,EAAE,oBAPD;AAQhBC,QAAAA,WAAW,EAAE,MARG;AAShBC,QAAAA,WAAW,EAAE;AATG,OAAD,EAUP;AACEP,QAAAA,IAAI,EAACX,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAQ;AACvB,iBAAOA,IAAI,CAACa,MAAZ;AACH,SAFI,CADP;AAIEN,QAAAA,KAAK,EAAE,QAJT;AAKEC,QAAAA,IAAI,EAAE,KALR;AAMRC,QAAAA,WAAW,EAAE,GANL;AAORC,QAAAA,eAAe,EAAE,oBAPT;AAQRC,QAAAA,WAAW,EAAE,KARL;AASRC,QAAAA,WAAW,EAAE;AATL,OAVO;AAFL,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADwB,GA+BrB,SA/BR;AAkCA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAIH;;AAED,eAAetB,WAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {useSelector} from 'react-redux';\n\nimport {fetchDailyData} from '../ducks/dailyData';\n\nimport {Line, Bar} from 'react-chartjs-2';\n\nfunction CoronaChart(){\n\n    const[state,setState] = useState({});\n\n    const dispatch = useDispatch();\n\n   const dailyData = useSelector((store)=>{\n\n    return store.dailyData.dailyData\n\n    })\n\n    console.log(dailyData)\n\n    const date = dailyData.map((item)=>{\n\n        return item.reportDate\n\n    })\n\n    console.log(date)\n\n    useEffect(()=>{\n\n        dispatch(fetchDailyData())\n\n\n    },[])\n\n    const lineChart = ( dailyData ?\n        (<Line\n\n        data = {{\n            labels: date,\n            dataSets:[{\n                data:dailyData.map((item)=>{\n                    return item.confirmed\n                }),\n                label: 'Infected',\n                fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'blue',\n      borderWidth: 2\n            },{\n                data:dailyData.map((item)=>{\n                    return item.deaths\n                }),\n                label: 'Deaths',\n                fill: false,\n      lineTension: 0.5,\n      backgroundColor: 'rgba(75,192,192,1)',\n      borderColor: 'red',\n      borderWidth: 2\n\n            }]\n        }}\n        \n        \n        \n        />):'Loading'\n    );\n\n    return( \n        \n        <div> hello </div> \n    )\n}\n\nexport default CoronaChart;"]},"metadata":{},"sourceType":"module"}