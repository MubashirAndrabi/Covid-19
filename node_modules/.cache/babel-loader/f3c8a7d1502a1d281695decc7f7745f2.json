{"ast":null,"code":"var _jsxFileName = \"/Users/mubashirahmad/Downloads/coronadata/src/components/CoronaChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { fetchDailyData } from '../ducks/dailyData';\nimport { Line, Bar, Chart } from 'react-chartjs-2';\n\nfunction CoronaChart() {\n  const [state, setState] = useState({});\n  const dispatch = useDispatch();\n  const dailyData = useSelector(store => {\n    return store.dailyData.dailyData;\n  });\n  console.log(dailyData);\n  useEffect(() => {\n    dispatch(fetchDailyData());\n  }, []);\n  const data = React.useMemo(() => [{\n    label: 'Series 1',\n    data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n  }, {\n    label: 'Series 2',\n    data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n  }], []);\n  const axes = React.useMemo(() => [{\n    primary: true,\n    type: 'linear',\n    position: 'bottom'\n  }, {\n    type: 'linear',\n    position: 'left'\n  }], []);\n  const lineChart =\n  /*#__PURE__*/\n  // A react-chart hyper-responsively and continuously fills the available\n  // space of its parent element automatically\n  React.createElement(\"div\", {\n    style: {\n      width: '400px',\n      height: '300px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    data: data,\n    axes: axes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default CoronaChart;","map":{"version":3,"sources":["/Users/mubashirahmad/Downloads/coronadata/src/components/CoronaChart.js"],"names":["React","useState","useEffect","useDispatch","useSelector","fetchDailyData","Line","Bar","Chart","CoronaChart","state","setState","dispatch","dailyData","store","console","log","data","useMemo","label","axes","primary","type","position","lineChart","width","height"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAAQC,cAAR,QAA6B,oBAA7B;AAEA,SAAQC,IAAR,EAAcC,GAAd,EAAmBC,KAAnB,QAA+B,iBAA/B;;AAEA,SAASC,WAAT,GAAsB;AAElB,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMW,QAAQ,GAAGT,WAAW,EAA5B;AAED,QAAMU,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAS;AAEtC,WAAOA,KAAK,CAACD,SAAN,CAAgBA,SAAvB;AAEC,GAJ2B,CAA7B;AAMCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEAX,EAAAA,SAAS,CAAC,MAAI;AAEVU,IAAAA,QAAQ,CAACP,cAAc,EAAf,CAAR;AAGH,GALQ,EAKP,EALO,CAAT;AAOA,QAAMY,IAAI,GAAGjB,KAAK,CAACkB,OAAN,CACT,MAAM,CACJ;AACEC,IAAAA,KAAK,EAAE,UADT;AAEEF,IAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB,EAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC;AAFR,GADI,EAKJ;AACEE,IAAAA,KAAK,EAAE,UADT;AAEEF,IAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,CAAJ,CAAzB,EAAiC,CAAC,CAAD,EAAI,CAAJ,CAAjC;AAFR,GALI,CADG,EAWT,EAXS,CAAb;AAaE,QAAMG,IAAI,GAAGpB,KAAK,CAACkB,OAAN,CACX,MAAM,CACJ;AAAEG,IAAAA,OAAO,EAAE,IAAX;AAAiBC,IAAAA,IAAI,EAAE,QAAvB;AAAiCC,IAAAA,QAAQ,EAAE;AAA3C,GADI,EAEJ;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,QAAQ,EAAE;AAA5B,GAFI,CADK,EAKX,EALW,CAAb;AAOA,QAAMC,SAAS;AAAA;AACb;AACA;AACA;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,OADF;AAELC,MAAAA,MAAM,EAAE;AAFH,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAET,IAAb;AAAmB,IAAA,IAAI,EAAEG,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAHF;AAYL;;AAED,eAAeX,WAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {useSelector} from 'react-redux';\n\nimport {fetchDailyData} from '../ducks/dailyData';\n\nimport {Line, Bar, Chart} from 'react-chartjs-2';\n\nfunction CoronaChart(){\n\n    const[state,setState] = useState({});\n\n    const dispatch = useDispatch();\n\n   const dailyData = useSelector((store)=>{\n\n    return store.dailyData.dailyData\n\n    })\n\n    console.log(dailyData)\n\n    useEffect(()=>{\n\n        dispatch(fetchDailyData())\n\n\n    },[])\n\n    const data = React.useMemo(\n        () => [\n          {\n            label: 'Series 1',\n            data: [[0, 1], [1, 2], [2, 4], [3, 2], [4, 7]]\n          },\n          {\n            label: 'Series 2',\n            data: [[0, 3], [1, 1], [2, 5], [3, 6], [4, 4]]\n          }\n        ],\n        []\n      )\n      const axes = React.useMemo(\n        () => [\n          { primary: true, type: 'linear', position: 'bottom' },\n          { type: 'linear', position: 'left' }\n        ],\n        []\n      )\n      const lineChart = (\n        // A react-chart hyper-responsively and continuously fills the available\n        // space of its parent element automatically\n        <div\n          style={{\n            width: '400px',\n            height: '300px'\n          }}\n        >\n          <Chart data={data} axes={axes} />\n        </div>\n      )\n}\n\nexport default CoronaChart;"]},"metadata":{},"sourceType":"module"}