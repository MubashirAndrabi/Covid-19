{"ast":null,"code":"var _jsxFileName = \"/Users/mubashirahmad/Downloads/coronadata/src/components/CountryPicker.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { fetchCountries } from '../ducks/countries';\nimport { getCountry } from '../ducks/countries';\nimport { Input, Select, Card, Row, Col } from 'antd';\nimport './CoronaCard.css';\nimport CountUp from \"react-countup\";\n\nfunction CountryPicker() {\n  const [country, setCountry] = useState('');\n  console.log(country);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCountries());\n  }, []);\n  const countries = useSelector(store => {\n    return store.countries.countries;\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    style: {\n      width: \"30%\"\n    },\n    placeholder: \"Select a country\",\n    onChange: value => {\n      setCountry(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, countries.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      value: item.name,\n      key: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, \" \", item.name, \" \");\n  }))));\n}\n\nexport default CountryPicker;","map":{"version":3,"sources":["/Users/mubashirahmad/Downloads/coronadata/src/components/CountryPicker.js"],"names":["React","useEffect","useDispatch","useSelector","fetchCountries","getCountry","Input","Select","Card","Row","Col","CountUp","CountryPicker","country","setCountry","useState","console","log","dispatch","countries","store","width","value","map","item","index","name"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,cAAR,QAA6B,oBAA7B;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,GAA7B,EAAkCC,GAAlC,QAA4C,MAA5C;AACA,OAAO,kBAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,SAASC,aAAT,GAAwB;AAEpB,QAAK,CAACC,OAAD,EAASC,UAAT,IAAuBC,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEA,QAAMK,QAAQ,GAAGhB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAEViB,IAAAA,QAAQ,CAACd,cAAc,EAAf,CAAR;AAEH,GAJQ,EAIP,EAJO,CAAT;AAMA,QAAMe,SAAS,GAAGhB,WAAW,CAAEiB,KAAD,IAAS;AAEnC,WAAOA,KAAK,CAACD,SAAN,CAAgBA,SAAvB;AAEH,GAJ4B,CAA7B;AAMA,sBACJ,uDACQ,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACE,MAAAA,KAAK,EAAC;AAAP,KAAf;AAA8B,IAAA,WAAW,EAAC,kBAA1C;AAA6D,IAAA,QAAQ,EAAGC,KAAD,IAAS;AAE5ER,MAAAA,UAAU,CAACQ,KAAD,CAAV;AAEH,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,SAAS,CAACI,GAAV,CAAc,CAACC,IAAD,EAAMC,KAAN,KAAc;AAE7B,wBAAO,oBAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,KAAK,EAAED,IAAI,CAACE,IAA3B;AAAiC,MAAA,GAAG,EAAEF,IAAI,CAACE,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAmDF,IAAI,CAACE,IAAxD,MAAP;AAEC,GAJA,CALH,CADE,CADR,CADI;AAoBH;;AAED,eAAed,aAAf","sourcesContent":["import React,{useEffect} from 'react';\n\nimport {useDispatch} from 'react-redux';\nimport {useSelector} from 'react-redux';\nimport {fetchCountries} from '../ducks/countries';\nimport {getCountry} from '../ducks/countries';\nimport {Input, Select, Card, Row, Col} from 'antd';\nimport './CoronaCard.css'\nimport CountUp from \"react-countup\";\n\nfunction CountryPicker(){\n\n    const[country,setCountry] = useState('');\n\n    console.log(country)\n\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n\n        dispatch(fetchCountries());\n\n    },[])\n\n    const countries = useSelector((store)=>{\n\n        return store.countries.countries;\n\n    })\n\n    return(\n<>\n        <Input.Group >\n      <Select style={{width:\"30%\"}} placeholder=\"Select a country\" onChange={(value)=>{\n\n          setCountry(value)\n          \n      }}>\n        {countries.map((item,index)=>{\n\n        return <Select.Option value={item.name} key={item.name}> {item.name} </Select.Option>\n\n        })}\n      </Select>\n      </Input.Group>\n    \n</>\n\n\n    )\n}\n\nexport default CountryPicker;"]},"metadata":{},"sourceType":"module"}