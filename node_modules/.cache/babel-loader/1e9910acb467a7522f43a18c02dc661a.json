{"ast":null,"code":"import _slicedToArray from\"/Users/mubashirahmad/Downloads/coronadata/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useDispatch}from'react-redux';import{useSelector}from'react-redux';import{fetchDailyData}from'../ducks/dailyData';import{Line,Bar}from'react-chartjs-2';import'./coronaChart.css';function CoronaChart(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var dispatch=useDispatch();var dailyData=useSelector(function(store){return store.dailyData.dailyData;});console.log(dailyData);var date=dailyData.map(function(item){return item.reportDate;});console.log(date);useEffect(function(){dispatch(fetchDailyData());},[]);// const lineChart = ( \n//     dailyData.length ? (\n//     <Line\n//     data = {{\n//         labels: date,\n//         dataSets:[{\n//             data:dailyData.map((item)=>item.confirmed.total),\n//             label: 'Infected',\n//             borderColor: '#3333ff',\n//             fill: true,\n//         }, {\n//             data:dailyData.map((item)=>item.deaths.total),\n//             label: 'Deaths',\n//             borderColor: 'red',\n//             backgroundColor: 'rgba(255, 0, 0, 0.5)',\n//             fill: true,\n//         },\n//     ],\n//     }}\n//     /> \n//     ) : null\n// );\nvar lineChart=dailyData.length?/*#__PURE__*/React.createElement(Line,{data:{labels:date,datasets:[{data:dailyData.map(function(item){return item.confirmed.total;}),label:'Infected',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(item){return item.deaths.total;}),label:'Deaths',borderColor:'red',backgroundColor:'rgba(255, 0, 0, 0.5)',fill:true}]}}):null;var barChart=dailyData.length?/*#__PURE__*/React.createElement(Bar,null):null;// const lines = JSON.parse(JSON.stringify(lineChart));\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"lineChart\"},lineChart);}export default CoronaChart;","map":{"version":3,"sources":["/Users/mubashirahmad/Downloads/coronadata/src/components/CoronaChart.js"],"names":["React","useState","useEffect","useDispatch","useSelector","fetchDailyData","Line","Bar","CoronaChart","state","setState","dispatch","dailyData","store","console","log","date","map","item","reportDate","lineChart","length","labels","datasets","data","confirmed","total","label","borderColor","fill","deaths","backgroundColor","barChart"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAAQC,WAAR,KAA0B,aAA1B,CACA,OAAQC,WAAR,KAA0B,aAA1B,CAEA,OAAQC,cAAR,KAA6B,oBAA7B,CAEA,OAAQC,IAAR,CAAcC,GAAd,KAAwB,iBAAxB,CACA,MAAO,mBAAP,CACA,QAASC,CAAAA,WAAT,EAAsB,eAEMP,QAAQ,CAAC,EAAD,CAFd,wCAEZQ,KAFY,eAENC,QAFM,eAIlB,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,EAA5B,CAED,GAAMS,CAAAA,SAAS,CAAGR,WAAW,CAAC,SAACS,KAAD,CAAS,CAEtC,MAAOA,CAAAA,KAAK,CAACD,SAAN,CAAgBA,SAAvB,CAEC,CAJ2B,CAA7B,CAMCE,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAEA,GAAMI,CAAAA,IAAI,CAAGJ,SAAS,CAACK,GAAV,CAAc,SAACC,IAAD,CAAQ,CAE/B,MAAOA,CAAAA,IAAI,CAACC,UAAZ,CAEH,CAJY,CAAb,CAMAL,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAEAd,SAAS,CAAC,UAAI,CAEVS,QAAQ,CAACN,cAAc,EAAf,CAAR,CAGH,CALQ,CAKP,EALO,CAAT,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMe,CAAAA,SAAS,CACXR,SAAS,CAACS,MAAV,cACE,oBAAC,IAAD,EACE,IAAI,CAAE,CACJC,MAAM,CAAEN,IADJ,CAEJO,QAAQ,CAAE,CAAC,CACTC,IAAI,CAAEZ,SAAS,CAACK,GAAV,CAAc,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACO,SAAL,CAAeC,KAAzB,EAAd,CADG,CAETC,KAAK,CAAE,UAFE,CAGTC,WAAW,CAAE,SAHJ,CAITC,IAAI,CAAE,IAJG,CAAD,CAKP,CACDL,IAAI,CAAEZ,SAAS,CAACK,GAAV,CAAc,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACY,MAAL,CAAYJ,KAAtB,EAAd,CADL,CAEDC,KAAK,CAAE,QAFN,CAGDC,WAAW,CAAE,KAHZ,CAIDG,eAAe,CAAE,sBAJhB,CAKDF,IAAI,CAAE,IALL,CALO,CAFN,CADR,EADF,CAmBI,IApBR,CAuBE,GAAMG,CAAAA,QAAQ,CACVpB,SAAS,CAACS,MAAV,cACI,oBAAC,GAAD,MADJ,CASI,IAVR,CAaF;AAEA,mBAEI,2BAAK,SAAS,CAAC,WAAf,EACKD,SADL,CAFJ,CAMH,CAED,cAAeZ,CAAAA,WAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {useSelector} from 'react-redux';\n\nimport {fetchDailyData} from '../ducks/dailyData';\n\nimport {Line, Bar} from 'react-chartjs-2';\nimport './coronaChart.css'\nfunction CoronaChart(){\n\n    const[state,setState] = useState({});\n\n    const dispatch = useDispatch();\n\n   const dailyData = useSelector((store)=>{\n\n    return store.dailyData.dailyData\n\n    })\n\n    console.log(dailyData)\n\n    const date = dailyData.map((item)=>{\n\n        return item.reportDate\n\n    })\n\n    console.log(date)\n\n    useEffect(()=>{\n\n        dispatch(fetchDailyData())\n\n\n    },[])\n\n    // const lineChart = ( \n    //     dailyData.length ? (\n    //     <Line\n    //     data = {{\n    //         labels: date,\n    //         dataSets:[{\n    //             data:dailyData.map((item)=>item.confirmed.total),\n    //             label: 'Infected',\n    //             borderColor: '#3333ff',\n    //             fill: true,\n    //         }, {\n    //             data:dailyData.map((item)=>item.deaths.total),\n    //             label: 'Deaths',\n    //             borderColor: 'red',\n    //             backgroundColor: 'rgba(255, 0, 0, 0.5)',\n    //             fill: true,\n    //         },\n    //     ],\n    //     }}\n    //     /> \n    //     ) : null\n    // );\n    const lineChart = (\n        dailyData.length ? (\n          <Line\n            data={{\n              labels: date,\n              datasets: [{\n                data: dailyData.map((item) => item.confirmed.total),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true,\n              }, {\n                data: dailyData.map((item) => item.deaths.total),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true,\n              },\n              ],\n            }}\n          />\n        ) : null\n      );\n\n      const barChart = (\n          dailyData.length ? (\n              <Bar \n              \n              \n              \n              \n              \n              />\n\n          ) : null\n      )\n\n    // const lines = JSON.parse(JSON.stringify(lineChart));\n\n    return( \n        \n        <div className=\"lineChart\"> \n            {lineChart}\n        </div> \n    )\n}\n\nexport default CoronaChart;"]},"metadata":{},"sourceType":"module"}