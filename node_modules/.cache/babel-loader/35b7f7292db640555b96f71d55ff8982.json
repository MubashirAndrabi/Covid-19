{"ast":null,"code":"var _jsxFileName = \"/Users/mubashirahmad/Downloads/coronadataa/src/components/CoronaChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { fetchDailyData } from '../ducks/dailyData';\nimport { Line, Bar } from 'react-chartjs-2';\nimport './coronaChart.css';\n\nfunction CoronaChart() {\n  const [state, setState] = useState({});\n  const dispatch = useDispatch();\n  const dailyData = useSelector(store => {\n    return store.dailyData.dailyData;\n  });\n  console.log(dailyData);\n  const date = dailyData.map(item => {\n    return item.reportDate;\n  });\n  console.log(date);\n  useEffect(() => {\n    dispatch(fetchDailyData());\n  }, []); // const lineChart = ( \n  //     dailyData.length ? (\n  //     <Line\n  //     data = {{\n  //         labels: date,\n  //         dataSets:[{\n  //             data:dailyData.map((item)=>item.confirmed.total),\n  //             label: 'Infected',\n  //             borderColor: '#3333ff',\n  //             fill: true,\n  //         }, {\n  //             data:dailyData.map((item)=>item.deaths.total),\n  //             label: 'Deaths',\n  //             borderColor: 'red',\n  //             backgroundColor: 'rgba(255, 0, 0, 0.5)',\n  //             fill: true,\n  //         },\n  //     ],\n  //     }}\n  //     /> \n  //     ) : null\n  // );\n\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: date,\n      datasets: [{\n        data: dailyData.map(item => item.confirmed.total),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(item => item.deaths.total),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }) : null;\n  const barChart = dailyData.length ? /*#__PURE__*/React.createElement(Bar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }) : null; // const lines = JSON.parse(JSON.stringify(lineChart));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lineChart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, lineChart);\n}\n\nexport default CoronaChart;","map":{"version":3,"sources":["/Users/mubashirahmad/Downloads/coronadataa/src/components/CoronaChart.js"],"names":["React","useState","useEffect","useDispatch","useSelector","fetchDailyData","Line","Bar","CoronaChart","state","setState","dispatch","dailyData","store","console","log","date","map","item","reportDate","lineChart","length","labels","datasets","data","confirmed","total","label","borderColor","fill","deaths","backgroundColor","barChart"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAAQC,cAAR,QAA6B,oBAA7B;AAEA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;AACA,OAAO,mBAAP;;AACA,SAASC,WAAT,GAAsB;AAElB,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B;AAED,QAAMS,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAS;AAEtC,WAAOA,KAAK,CAACD,SAAN,CAAgBA,SAAvB;AAEC,GAJ2B,CAA7B;AAMCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEA,QAAMI,IAAI,GAAGJ,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAQ;AAE/B,WAAOA,IAAI,CAACC,UAAZ;AAEH,GAJY,CAAb;AAMAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEAd,EAAAA,SAAS,CAAC,MAAI;AAEVS,IAAAA,QAAQ,CAACN,cAAc,EAAf,CAAR;AAGH,GALQ,EAKP,EALO,CAAT,CAtBkB,CA6BlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMe,SAAS,GACXR,SAAS,CAACS,MAAV,gBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEN,IADJ;AAEJO,MAAAA,QAAQ,EAAE,CAAC;AACTC,QAAAA,IAAI,EAAEZ,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAUA,IAAI,CAACO,SAAL,CAAeC,KAAvC,CADG;AAETC,QAAAA,KAAK,EAAE,UAFE;AAGTC,QAAAA,WAAW,EAAE,SAHJ;AAITC,QAAAA,IAAI,EAAE;AAJG,OAAD,EAKP;AACDL,QAAAA,IAAI,EAAEZ,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAUA,IAAI,CAACY,MAAL,CAAYJ,KAApC,CADL;AAEDC,QAAAA,KAAK,EAAE,QAFN;AAGDC,QAAAA,WAAW,EAAE,KAHZ;AAIDG,QAAAA,eAAe,EAAE,sBAJhB;AAKDF,QAAAA,IAAI,EAAE;AALL,OALO;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAmBI,IApBR;AAuBE,QAAMG,QAAQ,GACVpB,SAAS,CAACS,MAAV,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GASI,IAVR,CA1EgB,CAuFlB;;AAEA,sBAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,SADL,CAFJ;AAMH;;AAED,eAAeZ,WAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {useSelector} from 'react-redux';\n\nimport {fetchDailyData} from '../ducks/dailyData';\n\nimport {Line, Bar} from 'react-chartjs-2';\nimport './coronaChart.css'\nfunction CoronaChart(){\n\n    const[state,setState] = useState({});\n\n    const dispatch = useDispatch();\n\n   const dailyData = useSelector((store)=>{\n\n    return store.dailyData.dailyData\n\n    })\n\n    console.log(dailyData)\n\n    const date = dailyData.map((item)=>{\n\n        return item.reportDate\n\n    })\n\n    console.log(date)\n\n    useEffect(()=>{\n\n        dispatch(fetchDailyData())\n\n\n    },[])\n\n    // const lineChart = ( \n    //     dailyData.length ? (\n    //     <Line\n    //     data = {{\n    //         labels: date,\n    //         dataSets:[{\n    //             data:dailyData.map((item)=>item.confirmed.total),\n    //             label: 'Infected',\n    //             borderColor: '#3333ff',\n    //             fill: true,\n    //         }, {\n    //             data:dailyData.map((item)=>item.deaths.total),\n    //             label: 'Deaths',\n    //             borderColor: 'red',\n    //             backgroundColor: 'rgba(255, 0, 0, 0.5)',\n    //             fill: true,\n    //         },\n    //     ],\n    //     }}\n    //     /> \n    //     ) : null\n    // );\n    const lineChart = (\n        dailyData.length ? (\n          <Line\n            data={{\n              labels: date,\n              datasets: [{\n                data: dailyData.map((item) => item.confirmed.total),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true,\n              }, {\n                data: dailyData.map((item) => item.deaths.total),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true,\n              },\n              ],\n            }}\n          />\n        ) : null\n      );\n\n      const barChart = (\n          dailyData.length ? (\n              <Bar \n              \n              \n              \n              \n              \n              />\n\n          ) : null\n      )\n\n    // const lines = JSON.parse(JSON.stringify(lineChart));\n\n    return( \n        \n        <div className=\"lineChart\"> \n            {lineChart}\n        </div> \n    )\n}\n\nexport default CoronaChart;"]},"metadata":{},"sourceType":"module"}