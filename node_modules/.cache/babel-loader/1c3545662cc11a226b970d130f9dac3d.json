{"ast":null,"code":"var _jsxFileName = \"/Users/mubashirahmad/Downloads/coronadata/src/components/CoronaChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { fetchDailyData } from '../ducks/dailyData';\nimport { Line, Bar } from 'react-chartjs-2';\n\nfunction CoronaChart() {\n  const [state, setState] = useState({});\n  const dispatch = useDispatch();\n  const dailyData = useSelector(store => {\n    return store.dailyData.dailyData;\n  });\n  console.log(dailyData);\n  const date = dailyData.map(item => {\n    return item.reportDate;\n  });\n  console.log(date);\n  useEffect(() => {\n    dispatch(fetchDailyData());\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: date,\n      dataSets: [{\n        data: dailyData.map(item => item.confirmed.total),\n        label: 'Infected',\n        fill: true,\n        //   lineTension: 0.5,\n        //   backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: '#3333ff' //   borderWidth: 2\n\n      }, {\n        data: dailyData.map(item => item.deaths.total),\n        label: 'Deaths',\n        fill: true,\n        //   lineTension: 0.5,\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        borderColor: 'red' //   borderWidth: 2\n\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }) : null; // const lineChart = (\n  //     dailyData.length ? (\n  //       <Line\n  //         data={{\n  //           labels: date,\n  //           datasets: [{\n  //             data: dailyData.map((item) => item.confirmed.total),\n  //             label: 'Infected',\n  //             borderColor: '#3333ff',\n  //             fill: true,\n  //           }, {\n  //             data: dailyData.map((item) => item.deaths.total),\n  //             label: 'Deaths',\n  //             borderColor: 'red',\n  //             backgroundColor: 'rgba(255, 0, 0, 0.5)',\n  //             fill: true,\n  //           },\n  //           ],\n  //         }}\n  //       />\n  //     ) : null\n  //   );\n  // const lines = JSON.parse(JSON.stringify(lineChart));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, lineChart);\n}\n\nexport default CoronaChart;","map":{"version":3,"sources":["/Users/mubashirahmad/Downloads/coronadata/src/components/CoronaChart.js"],"names":["React","useState","useEffect","useDispatch","useSelector","fetchDailyData","Line","Bar","CoronaChart","state","setState","dispatch","dailyData","store","console","log","date","map","item","reportDate","lineChart","length","labels","dataSets","data","confirmed","total","label","fill","borderColor","deaths","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAAQC,cAAR,QAA6B,oBAA7B;AAEA,SAAQC,IAAR,EAAcC,GAAd,QAAwB,iBAAxB;;AAEA,SAASC,WAAT,GAAsB;AAElB,QAAK,CAACC,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B;AAED,QAAMS,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAS;AAEtC,WAAOA,KAAK,CAACD,SAAN,CAAgBA,SAAvB;AAEC,GAJ2B,CAA7B;AAMCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEA,QAAMI,IAAI,GAAGJ,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAQ;AAE/B,WAAOA,IAAI,CAACC,UAAZ;AAEH,GAJY,CAAb;AAMAL,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEAd,EAAAA,SAAS,CAAC,MAAI;AAEVS,IAAAA,QAAQ,CAACN,cAAc,EAAf,CAAR;AAGH,GALQ,EAKP,EALO,CAAT;AAOA,QAAMe,SAAS,GACXR,SAAS,CAACS,MAAV,gBACA,oBAAC,IAAD;AACA,IAAA,IAAI,EAAI;AACJC,MAAAA,MAAM,EAAEN,IADJ;AAEJO,MAAAA,QAAQ,EAAC,CAAC;AACNC,QAAAA,IAAI,EAACZ,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAQA,IAAI,CAACO,SAAL,CAAeC,KAArC,CADC;AAENC,QAAAA,KAAK,EAAE,UAFD;AAGNC,QAAAA,IAAI,EAAE,IAHA;AAIlB;AACA;AACAC,QAAAA,WAAW,EAAE,SANK,CAOlB;;AAPkB,OAAD,EAQP;AACEL,QAAAA,IAAI,EAACZ,SAAS,CAACK,GAAV,CAAeC,IAAD,IAAQA,IAAI,CAACY,MAAL,CAAYJ,KAAlC,CADP;AAEEC,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,IAAI,EAAE,IAHR;AAIV;AACEG,QAAAA,eAAe,EAAE,mBALT;AAMRF,QAAAA,WAAW,EAAE,KANL,CAOV;;AAPU,OARO;AAFL,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAsBK,IAvBT,CA7BkB,CAsDlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,SADL,CAFJ;AAMH;;AAED,eAAeZ,WAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\nimport {useSelector} from 'react-redux';\n\nimport {fetchDailyData} from '../ducks/dailyData';\n\nimport {Line, Bar} from 'react-chartjs-2';\n\nfunction CoronaChart(){\n\n    const[state,setState] = useState({});\n\n    const dispatch = useDispatch();\n\n   const dailyData = useSelector((store)=>{\n\n    return store.dailyData.dailyData\n\n    })\n\n    console.log(dailyData)\n\n    const date = dailyData.map((item)=>{\n\n        return item.reportDate\n\n    })\n\n    console.log(date)\n\n    useEffect(()=>{\n\n        dispatch(fetchDailyData())\n\n\n    },[])\n\n    const lineChart = ( \n        dailyData.length ? (\n        <Line\n        data = {{\n            labels: date,\n            dataSets:[{\n                data:dailyData.map((item)=>item.confirmed.total),\n                label: 'Infected',\n                fill: true,\n    //   lineTension: 0.5,\n    //   backgroundColor: 'rgba(75,192,192,1)',\n    borderColor: '#3333ff',\n    //   borderWidth: 2\n            },{\n                data:dailyData.map((item)=>item.deaths.total),\n                label: 'Deaths',\n                fill: true,\n    //   lineTension: 0.5,\n      backgroundColor: 'rgba(255,0,0,0.5)',\n      borderColor: 'red',\n    //   borderWidth: 2\n            }],\n        }}\n        />): null\n    );\n    // const lineChart = (\n    //     dailyData.length ? (\n    //       <Line\n    //         data={{\n    //           labels: date,\n    //           datasets: [{\n    //             data: dailyData.map((item) => item.confirmed.total),\n    //             label: 'Infected',\n    //             borderColor: '#3333ff',\n    //             fill: true,\n    //           }, {\n    //             data: dailyData.map((item) => item.deaths.total),\n    //             label: 'Deaths',\n    //             borderColor: 'red',\n    //             backgroundColor: 'rgba(255, 0, 0, 0.5)',\n    //             fill: true,\n    //           },\n    //           ],\n    //         }}\n    //       />\n    //     ) : null\n    //   );\n\n    // const lines = JSON.parse(JSON.stringify(lineChart));\n\n    return( \n        \n        <div> \n            {lineChart}\n        </div> \n    )\n}\n\nexport default CoronaChart;"]},"metadata":{},"sourceType":"module"}